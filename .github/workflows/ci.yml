
# This workflow will build a Java project with Gradle..
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-java:

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
  
    - name: Build with Gradle
      run: ./gradlew build
      
    - name: 'Build and push image'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
        
    - run: |
        docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/sampleapp:latest
        docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/sampleapp:latest
# Set the target AKS cluster.
    - uses: Azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: tfakscluster
        resource-group: AKS-ELK-RG
        
#     - uses: Azure/k8s-create-secret@v1
#       with:
#         container-registry-url: gitactionsacr.azurecr.io
#         container-registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
#         container-registry-username: ${{ secrets.REGISTRY_USERNAME }}
#         container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}
#         secret-name: myregistrykey

    - uses: Azure/k8s-deploy@v1
      with:
        manifests: |
          manifests/deployment.yml
          manifests/service.yml
        images: |
          gitactionsacr.azurecr.io/sampleapp:latest
        imagepullsecrets: |
          myacrsecret
